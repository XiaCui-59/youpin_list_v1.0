{"version":3,"sources":["uni-app:///main.js","webpack:///E:/项目文件/发薪平台/youpin_list_v1.0/subpkg/phone_call/phone_call.vue?b297","webpack:///E:/项目文件/发薪平台/youpin_list_v1.0/subpkg/phone_call/phone_call.vue?8eb9","webpack:///E:/项目文件/发薪平台/youpin_list_v1.0/subpkg/phone_call/phone_call.vue?c516","webpack:///E:/项目文件/发薪平台/youpin_list_v1.0/subpkg/phone_call/phone_call.vue?a7ac","uni-app:///subpkg/phone_call/phone_call.vue","webpack:///E:/项目文件/发薪平台/youpin_list_v1.0/subpkg/phone_call/phone_call.vue?a74b"],"names":["wx","__webpack_require_UNI_MP_PLUGIN__","__webpack_require__","createPage","Page","renderjs","component","options","__file","components","render","_vm","this","_h","$createElement","_self","_c","recyclableRender","staticRenderFns","_withStripped","data","imgUrl","inputStatus","hasVoice","aiSpeeking","aiThrinking","audioCtx","lowVoiceCount","highVoiceCount","currentPlayIndex","index","resultArrayBuffer","arrayBufferLength","result","longTimeNoInput","action","welcomeVoice","receiveEnd","currentTransIndex","closeStatus","errorVoice","requestTask","receiveCount","transTimer","playTimer","isWelcome","status","job_id","errorTimer","getResponeTime","scrollText","onLoad","uni","app","onShow","onHide","watch","computed","methods","handleAutoAction","console","close","clearInterval","prevPage","setTimeout","resetData","startRecord","format","sampleRate","numberOfChannels","encodeBitRate","frameSize","duration","initRecord","_this","frameBuffer","res","uint16Array","squareSum","userEnter","playError","handleRecorder","tempFilePath","filePath","success","fail","stringToUint8Array","arr","playTipsVoice","source","gain","concatBuffer","mergedArray","offset","sendMessage","url","enableChunked","header","responseType","method","transFirst","startTrans","containsDoneMarker","playFirst","play"],"mappings":"uJAAA,MAGA,aACA,YAFAA,EAAGC,kCAAoCC,EAGvCC,EAAWC,a,gFCLX,oIACIC,EADJ,QASIC,EAAY,qBACd,aACA,YACA,sBACA,EACA,KACA,KACA,MACA,EACA,gBACAD,GAGFC,EAAUC,QAAQC,OAAS,mCACZ,aAAAF,E,0CCvBf,uQ,iCCAA,IAAIG,EAAJ,0LACA,IAAIC,EAAS,WACX,IAAIC,EAAMC,KACNC,EAAKF,EAAIG,eACJH,EAAII,MAAMC,IAEjBC,GAAmB,EACnBC,EAAkB,GACtBR,EAAOS,eAAgB,G,iCCRvB,yHAAsoB,eAAG,G,kKCsDzoB,WAGA,QAGA,4rBAJA,0BAMA,aACA,CACAC,gBACA,OACAC,iCACAC,eACAC,YACAC,cACAC,eACAC,mCACAC,gBACAC,iBACAC,mBACAC,QACAC,qBACAC,oBACAC,UACAC,mBACAC,UACAC,2FACA,0BAEAC,cACAC,oBACAC,eACAC,oFACAC,iBACAC,eACAC,gBACAC,eACAC,aACAC,UACAC,UACAC,gBACAC,mBAGAxC,YACAyC,cAEAC,mBAAA,oIACAC,kBACA,cAEAC,uCACA,gBACA,iBACA,iBACA,iBAGAA,2CAKAA,wCAEA,eACA,mBAIA,8BACA,mCACA,gBACA,cADA,KACA,GAKA,YALA,KAKA,GAIA,YAJA,KAIA,oBANA,OAFA,2BACA,eACA,kDAIA,OADA,8BACA,2CAKA,OAFA,kCACA,eACA,kDAGA,qFAzCA,IA+CAC,kBACA,mBAEAC,kBACAF,2BAEAA,6BACAA,8BACAA,6BACAA,8BACAA,4BACAA,0BACA,kBACA,cAGAG,OACA7B,0BACA,WACA,mBAEA,MACA0B,4BAIA,MACAA,6BAKAzB,2BACA,IAEA,yBACA,8BACA,uBACA,iCACA,uBACA,qCAEA,eAGA,yDAGAN,wBACA,GACA,kBAGAS,8BAGA,iCAMAE,sBAIAwB,eACA,0GACA,0FACA,iBAGAC,gBACA,0FACA,6DACA,IACAC,4BAEA,+CACAC,8BAEA,2BACA,+BACA,yDACA,0BACA,qBAEAC,iBACA,oBACA,wBACA,yBACA,wBACA,gBAEA,sBAEA,oBAEA,oBAEAR,0BAEA,sBAEAA,4BAEA,mBACA,oCACA,0BAEA,iBACAS,+BAEA,gBACAA,8BAEA,wBAEA,gBAEA,oBACAC,mBAEAC,uBACAZ,mBACA,MAGAa,qBAEA,wBACA,sBACA,wBACA,qBACA,eACA,mBACA,0BACA,yBACA,yBACA,qBAEAC,uBACA,kBAGAb,4BACAc,aACAC,eACAC,mBACAC,mBACAC,YACAC,gBAGAC,sBAAA,WAEApB,0CAEA,kBAIA,iBACA,gBACA,iBACA,iBAGAA,yCACA,QAEAqB,iBACAA,cACAA,iBACAA,gBACA,eAEA,uBAIArB,8CAIAA,kDACA,QAEAsB,EACAC,EADAD,YAEA,oBACA,WACA,IAIA,GAHAE,uBACAC,YAEA,QACA,UACA,6BAEA,MAEAJ,cACAA,oBAEAA,cACAA,kBACAA,yBAIAK,qBAEA,yDACA1B,4CACAA,2BAEA2B,qBACA,mBAGA3B,uCACAA,0BACA,wBACA,mBACA,oBACA,oBACA,mBAGA4B,2BAGA,IAFAC,iBAGA,GAFAV,WAEA,MACAxE,mCACAmF,WACAC,oBACA,sCACA,uBACA,+BACA,sCACAjD,OACA,MACA,2BACAuC,kBAEAW,iBACAzB,2BACAc,kBAIAY,+BAIA,IAHA,sCACA,WACA,oBACA,YACAC,qBAEA,UAEAC,yBACA,uCACA,6BAEAC,aACAC,qCACAD,cACAA,wBACAC,mDACAA,uEAEAD,UACAA,sCAEAE,2BACA,wBACA,6BAGA,oBAEA,oBAEA,IAIA,OAHAC,WACAC,YACAD,WACA,UAEAE,wBACAlC,uBACA,WACA,4BACAmC,MACAC,iBACAC,QACA,kCACA,8BACA,mEACA,uDACA,kDACA,2CAEAC,2BACAC,cACA/E,OACAgE,oBACAxB,qBAEAyB,iBACAzB,gCAEAc,iCACArB,0BACAW,uBACAJ,8BACAc,gBACA,QAIA,wCACA,oBAEA,kBACAZ,4BACAT,2BAEAqB,oBAGAA,mBACAZ,+BAGA,KACA,8CACAY,iBACA,oBACAd,wBACAc,sBAEAA,iCAEA,6BAEA,sCAEA,4BAEA,IAEAd,6BACAc,gBACAA,sCAKA0B,uBACA,WAEA1B,0CACAA,sBACA,yBACAA,uBACAA,eACAA,eACAA,mBAEAA,iBACAA,kBAEA,YAGAd,wCAEAc,gCACAA,mBAIA2B,sBACA,WACA,4CACA,+CACA3B,0CACAA,sBACA,yBACAA,uBACAA,eACAA,eACAA,mBAEAA,iBACAA,kBAEA,YAEAd,wCACAc,kDAEAA,uBAGA,eAKAA,qCACA,0CACAA,eACAZ,+BAEA,OAOAwC,iCACA,eAEA,uBACA,oBACA,0BACA,SAGA,UAEAC,sBACA,WACA7B,gBACAA,iBACAA,iBACAA,cACA,yCACAe,qCACAA,WACAA,UACAA,qBAEAf,qBACAA,WAGA8B,gBACA,WACA,qBAEA,0BAsCA9B,gBACAA,iBACAA,iBACAA,cACA,yCACAe,qCACAA,4CACAA,UACAA,qBAEAf,qBACAA,eA/CA,sCAGAA,cACAA,qBACAA,qBACAd,yCACA,gBAEAc,2BACAA,qBACAA,gBACAA,iBACAA,sBAEA,eAEAA,qBACAA,WAEAA,iBAOAA,oCACA,qCACAA,SACAZ,8BAEA,SAmBA,c,6EClpBA,yHAA6rC,eAAG,G","file":"subpkg/phone_call/phone_call.js","sourcesContent":["import 'uni-pages';\n// @ts-ignore\nwx.__webpack_require_UNI_MP_PLUGIN__ = __webpack_require__;\nimport Vue from 'vue'\nimport Page from './subpkg/phone_call/phone_call.vue'\ncreatePage(Page)","import { render, staticRenderFns, recyclableRender, components } from \"./phone_call.vue?vue&type=template&id=0664305a&\"\nvar renderjs\nimport script from \"./phone_call.vue?vue&type=script&lang=js&\"\nexport * from \"./phone_call.vue?vue&type=script&lang=js&\"\nimport style0 from \"./phone_call.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"subpkg/phone_call/phone_call.vue\"\nexport default component.exports","export * from \"-!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--17-0!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./phone_call.vue?vue&type=template&id=0664305a&\"","var components\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-1!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./phone_call.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-1!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./phone_call.vue?vue&type=script&lang=js&\"","<template>\r\n\t<view class=\"mask\">\r\n\t\t<view class=\"top\">\r\n\t\t\t<view class=\"avatar\">\r\n\t\t\t\t<image :src=\"imgUrl+'/worker/new/index_ai_logo.png'\" mode=\"widthFix\">\r\n\t\t\t\t</image>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"gif_area\" v-show=\"aiThrinking\">\r\n\t\t\t\t<!-- 思考中 -->\r\n\t\t\t\t<image :src=\"imgUrl+'/worker/new/ai_thrinking.gif'\" mode=\"widthFix\" class=\"noinput\"\r\n\t\t\t\t\t:class=\"aiThrinking?'show':''\">\r\n\t\t\t\t</image>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t\t<view class=\"middle\">\r\n\t\t\t<view class=\"input_tips\" v-show=\"!inputStatus\">\r\n\t\t\t\t<view class=\"text_wrap\" v-show=\"aiThrinking\">\r\n\t\t\t\t\t<!-- <view class=\"\">好的</view> -->\r\n\t\t\t\t\t<view class=\"\">请稍等，马上回复您</view>\r\n\t\t\t\t</view>\r\n\t\t\t\t<view class=\"text_wrap\" v-show=\"aiSpeeking\">\r\n\t\t\t\t\t<scrollText width=\"80%\" v-if=\"!isWelcome && aiSpeeking\" :receiveEnd=\"receiveEnd\"></scrollText>\r\n\t\t\t\t\t<view v-show=\"isWelcome\">您好呀！</view>\r\n\t\t\t\t\t<view v-show=\"isWelcome\">{{status==\"interview\"?\"即将开始面试\":\"想找什么类型的工作呀？\"}}</view>\r\n\t\t\t\t\t<view v-show=\"isWelcome\">{{status==\"interview\"?\"请稍等\":\"都可以和我聊一聊哦\"}}</view>\r\n\t\t\t\t\t<!-- AI正在说话 -->\r\n\t\t\t\t\t<image :src=\"imgUrl+'/worker/new/speeking.gif'\" mode=\"widthFix\" style=\"width:200rpx;\"\r\n\t\t\t\t\t\tclass=\"inputing\">\r\n\t\t\t\t\t</image>\r\n\t\t\t\t</view>\r\n\r\n\t\t\t</view>\r\n\t\t\t<view class=\"input_tips\" v-show=\"inputStatus\">\r\n\t\t\t\t<view class=\"text_wrap\">您请讲，我正在听</view>\r\n\t\t\t\t<!-- 用户没有说话 -->\r\n\t\t\t\t<image :src=\"imgUrl+'/worker/new/noinput3.png'\" mode=\"widthFix\" style=\"width:700rpx;\" class=\"inputing\"\r\n\t\t\t\t\tv-show=\"!hasVoice\">\r\n\t\t\t\t</image>\r\n\t\t\t\t<!-- 用户正在说话 -->\r\n\t\t\t\t<image :src=\"imgUrl+'/worker/new/inputing_wave2.gif'\" style=\"width:700rpx;\" mode=\"widthFix\"\r\n\t\t\t\t\tclass=\"inputing\" v-show=\"hasVoice\">\r\n\t\t\t\t</image>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t\t<view class=\"bot\">\r\n\r\n\t\t\t<view class=\"btn_area flex flex_around\" @click=\"close\">\r\n\t\t\t\t<image :src=\"imgUrl+'/worker/new/close_chat.png'\" mode=\"widthFix\"></image>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t</view>\r\n</template>\r\n\r\n<script>\r\n\timport urlSetting from \"../../url_setting\";\r\n\timport scrollText from \"@/components/scrollText.vue\"\r\n\tconst BASE_URL = urlSetting.urls.voiceUrl\r\n\timport {\r\n\t\tmapState,\r\n\t\tmapMutations\r\n\t} from \"vuex\"\r\n\t// import * as TextEncoding from \"text-encoding-shim\"\r\n\tconst app = getApp()\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\timgUrl: app.globalData.baseImageUrl,\r\n\t\t\t\tinputStatus: false, //用户输入状态\r\n\t\t\t\thasVoice: false, //用户是否有声音输入，根据分贝大小动态改变\r\n\t\t\t\taiSpeeking: false, //AI正在说话\r\n\t\t\t\taiThrinking: true, //AI正在思考\r\n\t\t\t\taudioCtx: wx.createWebAudioContext(), //创建音频播放上下文\r\n\t\t\t\tlowVoiceCount: 0, //低分贝（连续低于20）次数,\r\n\t\t\t\thighVoiceCount: 0, //高分贝（连续大于55）次数,由此判定用户是否有输入过语音\r\n\t\t\t\tcurrentPlayIndex: 0,\r\n\t\t\t\tindex: 0, //接收的音频片段序号，当index=1时表示接收到第一条语音，开始播放音频\r\n\t\t\t\tresultArrayBuffer: [], //AI回复的未处理片段\r\n\t\t\t\tarrayBufferLength: 0,\r\n\t\t\t\tresult: [], //AI回复的音频片段缓存数组\r\n\t\t\t\tlongTimeNoInput: false, //用户长时间未输入语音标志\r\n\t\t\t\taction: \"\", //audio_call_user_long_time_without_talking 语音通话用户长时间不响应,\r\n\t\t\t\twelcomeVoice: [app.globalData.baseImageUrl + \"/worker/call_wel01.mp3\", app.globalData.baseImageUrl +\r\n\t\t\t\t\t\"/worker/call_wel02.mp3\"\r\n\t\t\t\t],\r\n\t\t\t\treceiveEnd: false,\r\n\t\t\t\tcurrentTransIndex: 0,\r\n\t\t\t\tcloseStatus: false,\r\n\t\t\t\terrorVoice: app.globalData.baseImageUrl + \"/worker/error.mp3?time=\" + (new Date()).getTime(),\r\n\t\t\t\trequestTask: null,\r\n\t\t\t\treceiveCount: 0,\r\n\t\t\t\ttransTimer: null,\r\n\t\t\t\tplayTimer: null,\r\n\t\t\t\tisWelcome: true,\r\n\t\t\t\tstatus: \"\", //记录当前场景：普通（normal）;面试（interview)\r\n\t\t\t\tjob_id: \"\", //记录当前面试的职位id，\r\n\t\t\t\terrorTimer: null, //异常判断\r\n\t\t\t\tgetResponeTime: 0 //记录等待返回第一个音频的时间\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomponents: {\r\n\t\t\tscrollText\r\n\t\t},\r\n\t\tasync onLoad(params) {\r\n\t\t\tuni.hideShareMenu()\r\n\t\t\tthis.setInCall()\r\n\t\t\t//音频停止事件\r\n\t\t\tapp.globalData.Audio.onPlay(e => {\r\n\t\t\t\tthis.aiSpeeking = true\r\n\t\t\t\tthis.aiThrinking = false\r\n\t\t\t\tthis.inputStatus = false\r\n\t\t\t\tthis.hasVoice = false\r\n\t\t\t});\r\n\t\t\t//音频停止事件\r\n\t\t\tapp.globalData.Audio.onStop(e => {\r\n\t\t\t\t// console.log(\"通话页停止\")\r\n\t\t\t});\r\n\r\n\t\t\t//音频播放结束事件\r\n\t\t\tapp.globalData.Audio.onEnded(e => {\r\n\t\t\t\t// console.log(\"通话页结束\")\r\n\t\t\t\tthis.isWelcome = false\r\n\t\t\t\tthis.startRecord()\r\n\t\t\t});\r\n\r\n\t\t\t// 判断当前场景\r\n\t\t\tthis.status = params.status ? params.status : \"\"\r\n\t\t\tthis.job_id = params.job_id ? params.job_id : \"\"\r\n\t\t\tswitch (this.status) {\r\n\t\t\t\tcase \"interview\":\r\n\t\t\t\t\tthis.action = \"audio_interview\";\r\n\t\t\t\t\tthis.isWelcome = false\r\n\t\t\t\t\tthis.handleAutoAction()\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"findjob\":\r\n\t\t\t\t\tthis.action = \"audio_look_for_job\"\r\n\t\t\t\t\tthis.userEnter()\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"surejob\":\r\n\t\t\t\t\tthis.action = \"audio_want_application\"\r\n\t\t\t\t\tthis.isWelcome = false\r\n\t\t\t\t\tthis.handleAutoAction()\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.userEnter()\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\r\n\t\t},\r\n\t\tonShow() {\r\n\t\t\tthis.initRecord()\r\n\t\t},\r\n\t\tonHide() {\r\n\t\t\tapp.globalData.Audio.pause()\r\n\t\t\t// 移除Audio的各种监听\r\n\t\t\tapp.globalData.Audio.offPlay()\r\n\t\t\tapp.globalData.Audio.offPause()\r\n\t\t\tapp.globalData.Audio.offStop()\r\n\t\t\tapp.globalData.Audio.offEnded()\r\n\t\t\tapp.globalData.manager.stop()\r\n\t\t\tapp.globalData.Audio.stop()\r\n\t\t\tif (!this.closeStatus) {\r\n\t\t\t\tthis.close()\r\n\t\t\t}\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\tlowVoiceCount(newVaL) {\r\n\t\t\t\tlet _this = this\r\n\t\t\t\tif (_this.highVoiceCount > 2) {\r\n\t\t\t\t\t// 有输入\r\n\t\t\t\t\tif (newVaL > 10) {\r\n\t\t\t\t\t\tapp.globalData.manager.stop()\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 无输入\r\n\t\t\t\t\tif (newVaL > 20) {\r\n\t\t\t\t\t\tapp.globalData.manager.stop()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\t\t\thighVoiceCount(newVal) {\r\n\t\t\t\tif (newVal > 2) {\r\n\t\t\t\t\t// 有输入根据状态显示action\r\n\t\t\t\t\tif (this.status == \"interview\") {\r\n\t\t\t\t\t\tthis.action = \"audio_interview\"\r\n\t\t\t\t\t} else if (this.status == \"findjob\") {\r\n\t\t\t\t\t\tthis.action = \"audio_look_for_job\"\r\n\t\t\t\t\t} else if (this.status == \"surejob\") {\r\n\t\t\t\t\t\tthis.action = \"audio_want_application\"\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.action = \"\"\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.action = \"audio_call_user_long_time_without_talking\"\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tinputStatus(newVal) {\r\n\t\t\t\tif (newVal) {\r\n\t\t\t\t\tthis.resetData()\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tresultArrayBuffer(newVal) {\r\n\t\t\t\tlet _this = this\r\n\t\t\t\t// 监听接收到1个之后开始转换音频\r\n\t\t\t\tthis.arrayBufferLength = newVal.length\r\n\t\t\t\t// console.log(\"接收元数据长度：\", this.arrayBufferLength)\r\n\t\t\t\t// if (this.arrayBufferLength == 1) {\r\n\t\t\t\t// \tthis.startTrans()\r\n\t\t\t\t// }\r\n\t\t\t},\r\n\t\t\tresult(newVal) {\r\n\t\t\t\t// console.log(\"转换后音频长度：\", newVal.length)\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\t...mapState([\"answering\", \"connected\", \"connecting\", \"canSend\", \"inChannel\", \"answerContinue\", \"channelQaLen\",\r\n\t\t\t\t\"channelId\", \"channelQaList\", \"location\", \"token\", \"callContent\", \"incallEnroll\", \"incallJobId\",\r\n\t\t\t\t\"hangUpFirst\"\r\n\t\t\t])\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t...mapMutations([\"setInCall\", \"clearCallContent\", \"setAiSpeekingEnd\", \"resetAiSpeekingEnd\",\r\n\t\t\t\t\"resetIncallEnroll\", \"resetIncallJobId\", \"resetHangUpFirst\"\r\n\t\t\t]),\r\n\t\t\thandleAutoAction() {\r\n\t\t\t\t// 处理我要报名和我要面试，由AI说第一句话\r\n\t\t\t\tlet jobId = this.job_id ? this.job_id : this.incallJobId\r\n\t\t\t\tconsole.log(\"incallJobId：\", jobId)\r\n\t\t\t\t// 面试场景\r\n\t\t\t\tlet time = new Date().getTime()\r\n\t\t\t\tlet id = uni.getStorageSync(\"openid\") + time\r\n\t\t\t\tlet other = id + \"@@@\" + this.channelId + \"@@@\" + jobId + \"@@@\" + this.action + \"@@@\"\r\n\t\t\t\tlet sendData = this.concatBuffer(other, \"\")\r\n\t\t\t\tthis.sendMessage(sendData)\r\n\t\t\t},\r\n\t\t\tclose() {\r\n\t\t\t\tthis.closeStatus = true\r\n\t\t\t\tthis.clearCallContent()\r\n\t\t\t\tthis.resetIncallEnroll()\r\n\t\t\t\tthis.resetIncallJobId()\r\n\t\t\t\tif (this.audioCtx) {\r\n\t\t\t\t\t// 停止音频播放\r\n\t\t\t\t\tthis.audioCtx.close();\r\n\t\t\t\t\t// 清除 WebAudioContext 对象\r\n\t\t\t\t\tthis.audioCtx = null;\r\n\t\t\t\t}\r\n\t\t\t\tif (app.globalData.Audio) {\r\n\t\t\t\t\t//关闭录音\r\n\t\t\t\t\tapp.globalData.Audio.stop()\r\n\t\t\t\t}\r\n\t\t\t\tif (app.globalData.manager) {\r\n\t\t\t\t\t//关闭录音\r\n\t\t\t\t\tapp.globalData.manager.stop()\r\n\t\t\t\t}\r\n\t\t\t\tif (this.requestTask) {\r\n\t\t\t\t\tthis.requestTask.offChunkReceived() //取消监听数据返回函数\r\n\t\t\t\t\tthis.requestTask.abort() // 取消请求任务\r\n\t\t\t\t}\r\n\t\t\t\tif (this.transTimer) {\r\n\t\t\t\t\tclearInterval(this.transTimer)\r\n\t\t\t\t}\r\n\t\t\t\tif (this.playTimer) {\r\n\t\t\t\t\tclearInterval(this.playTimer)\r\n\t\t\t\t}\r\n\t\t\t\tlet pages = getCurrentPages();\r\n\t\t\t\t// prevPage 是获取上个页面的js里面的pages的所有信息，-2是上个页面，-3是上上个页面 以此类推\r\n\t\t\t\tlet prevPage = pages[pages.length - 2];\r\n\t\t\t\t// 在本页面修改上一个页面的 data\r\n\t\t\t\tif (prevPage && prevPage.$vm.changeTab) {\r\n\t\t\t\t\tprevPage.$vm.changeTab(1)\r\n\t\t\t\t}\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\tuni.navigateBack()\r\n\t\t\t\t}, 500)\r\n\r\n\t\t\t},\r\n\t\t\tresetData() {\r\n\t\t\t\t//关闭录音\r\n\t\t\t\tthis.currentPlayIndex = 0\r\n\t\t\t\tthis.highVoiceCount = 0\r\n\t\t\t\tthis.longTimeNoInput = false\r\n\t\t\t\tthis.lowVoiceCount = 0\r\n\t\t\t\tthis.result = []\r\n\t\t\t\tthis.receiveEnd = false\r\n\t\t\t\tthis.resultArrayBuffer = []\r\n\t\t\t\tthis.arrayBufferLength = 0\r\n\t\t\t\tthis.currentTransIndex = 0\r\n\t\t\t\tthis.receiveCount = 0\r\n\t\t\t},\r\n\t\t\tstartRecord() {\r\n\t\t\t\tif (this.closeStatus) {\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tapp.globalData.manager.start({\r\n\t\t\t\t\tformat: 'PCM',\r\n\t\t\t\t\tsampleRate: 8000,\r\n\t\t\t\t\tnumberOfChannels: 2,\r\n\t\t\t\t\tencodeBitRate: 16000,\r\n\t\t\t\t\tframeSize: 4,\r\n\t\t\t\t\tduration: 600000\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tinitRecord() {\r\n\t\t\t\t//录音开始事件\r\n\t\t\t\tapp.globalData.manager.onStart(e => {\r\n\t\t\t\t\t// console.log(\"录音开始\")\r\n\t\t\t\t\tthis.playTipsVoice()\r\n\t\t\t\t\t// uni.vibrateShort({\r\n\t\t\t\t\t// \tsuccess: function() {}\r\n\t\t\t\t\t// });\r\n\t\t\t\t\tthis.inputStatus = true //开启用户输入\r\n\t\t\t\t\tthis.aiSpeeking = false //关闭ai动效\r\n\t\t\t\t\tthis.aiThrinking = false //关闭ai动效\r\n\t\t\t\t\tthis.hasVoice = true\r\n\t\t\t\t});\r\n\t\t\t\t//录音结束事件\r\n\t\t\t\tapp.globalData.manager.onStop(res => {\r\n\t\t\t\t\tlet _this = this\r\n\t\t\t\t\t// console.log(\"录音结束：\", res)\r\n\t\t\t\t\t_this.inputStatus = false\r\n\t\t\t\t\t_this.hasVoice = false\r\n\t\t\t\t\t_this.aiThrinking = true //开启ai思考动效\r\n\t\t\t\t\t_this.aiSpeeking = false\r\n\t\t\t\t\tif (!_this.closeStatus) {\r\n\t\t\t\t\t\t// 录音结束，发送语音数据给后台\r\n\t\t\t\t\t\tthis.handleRecorder(res)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t});\r\n\t\t\t\tapp.globalData.manager.onError(res => {\r\n\t\t\t\t\tlet _this = this\r\n\t\t\t\t\t// console.log(\"phonecall录音出错：\", res.errMsg)\r\n\t\t\t\t})\r\n\t\t\t\tapp.globalData.manager.onFrameRecorded((res) => {\r\n\t\t\t\t\tlet _this = this\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\tframeBuffer\r\n\t\t\t\t\t} = res;\r\n\t\t\t\t\tlet uint16Array = new Int16Array(frameBuffer)\r\n\t\t\t\t\tlet len = uint16Array.length\r\n\t\t\t\t\tlet squareSum = 0\r\n\t\t\t\t\tuint16Array.forEach(uint16 => {\r\n\t\t\t\t\t\tsquareSum += uint16 * uint16\r\n\t\t\t\t\t})\r\n\t\t\t\t\tif (squareSum < 10000) return\r\n\t\t\t\t\tlet recordVolume = squareSum / len\r\n\t\t\t\t\tlet db = parseInt(10 * Math.log10(recordVolume))\r\n\t\t\t\t\t// console.log(\"当前分贝值：\", db)\r\n\t\t\t\t\tif (db < 60) {\r\n\t\t\t\t\t\t// 分贝太小\r\n\t\t\t\t\t\t_this.hasVoice = false\r\n\t\t\t\t\t\t_this.lowVoiceCount++\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t_this.hasVoice = true\r\n\t\t\t\t\t\t_this.lowVoiceCount = 0\r\n\t\t\t\t\t\t_this.highVoiceCount++\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tuserEnter() {\r\n\t\t\t\t// 用户进入页面，随机播放一条欢迎音频\r\n\t\t\t\tlet i = Math.floor(Math.random() * this.welcomeVoice.length)\r\n\t\t\t\tapp.globalData.Audio.src = this.welcomeVoice[i];\r\n\t\t\t\tapp.globalData.Audio.play();\r\n\t\t\t},\r\n\t\t\tplayError() {\r\n\t\t\t\tif (this.closeStatus) {\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tapp.globalData.Audio.src = this.errorVoice;\r\n\t\t\t\tapp.globalData.Audio.play();\r\n\t\t\t\tthis.clearCallContent()\r\n\t\t\t\tthis.aiSpeeking = true\r\n\t\t\t\tthis.aiThrinking = false\r\n\t\t\t\tthis.inputStatus = false\r\n\t\t\t\tthis.hasVoice = false\r\n\t\t\t},\r\n\t\t\t// 处理录音数据\r\n\t\t\thandleRecorder({\r\n\t\t\t\ttempFilePath,\r\n\t\t\t\tduration\r\n\t\t\t}) {\r\n\t\t\t\tlet _this = this\r\n\t\t\t\twx.getFileSystemManager().readFile({\r\n\t\t\t\t\tfilePath: tempFilePath,\r\n\t\t\t\t\tsuccess: function(res) {\r\n\t\t\t\t\t\tlet jobId = _this.job_id ? _this.job_id : _this.incallJobId\r\n\t\t\t\t\t\tlet time = new Date().getTime()\r\n\t\t\t\t\t\tlet id = uni.getStorageSync(\"openid\") + time\r\n\t\t\t\t\t\tlet other = id + \"@@@\" + _this.channelId + \"@@@\" + jobId + \"@@@\" + _this\r\n\t\t\t\t\t\t\t.action +\r\n\t\t\t\t\t\t\t\"@@@\"\r\n\t\t\t\t\t\tlet sendData = _this.concatBuffer(other, res.data)\r\n\t\t\t\t\t\t_this.sendMessage(sendData)\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfail: function(error) {\r\n\t\t\t\t\t\tconsole.error('读取文件失败：', error);\r\n\t\t\t\t\t\t_this.playError()\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tstringToUint8Array(str) {\r\n\t\t\t\tconst utf8 = unescape(encodeURIComponent(str)); // 将字符串编码为 UTF-8\r\n\t\t\t\tconst len = utf8.length;\r\n\t\t\t\tconst arr = new Uint8Array(len);\r\n\t\t\t\tfor (let i = 0; i < len; i++) {\r\n\t\t\t\t\tarr[i] = utf8.charCodeAt(i);\r\n\t\t\t\t}\r\n\t\t\t\treturn arr;\r\n\t\t\t},\r\n\t\t\tplayTipsVoice() {\r\n\t\t\t\tlet source = this.audioCtx.createOscillator()\r\n\t\t\t\tlet gain = this.audioCtx.createGain();\r\n\r\n\t\t\t\tsource.connect(gain);\r\n\t\t\t\tgain.connect(this.audioCtx.destination);\r\n\t\t\t\tsource.type = 'sine'; // 使用正弦波\r\n\t\t\t\tsource.frequency.value = 300.50; // 调高音调到C6\r\n\t\t\t\tgain.gain.setValueAtTime(2, this.audioCtx.currentTime); // 降低音量\r\n\t\t\t\tgain.gain.exponentialRampToValueAtTime(0.001, this.audioCtx.currentTime + 0.5); // 延长衰减时间\r\n\r\n\t\t\t\tsource.start();\r\n\t\t\t\tsource.stop(this.audioCtx.currentTime + 0.5);\r\n\t\t\t},\r\n\t\t\tconcatBuffer(other, data) {\r\n\t\t\t\tlet midata = new Uint8Array(data)\r\n\t\t\t\tlet binaryId = this.stringToUint8Array(other)\r\n\t\t\t\t// 输出拼接后的 Uint8Array\r\n\t\t\t\t// 计算总长度\r\n\t\t\t\tconst totalLength = binaryId.length + midata.length;\r\n\t\t\t\t// 创建一个新的 Uint8Array，长度为所有数组的总和\r\n\t\t\t\tlet mergedArray = new Uint8Array(totalLength);\r\n\t\t\t\t// 使用 set 方法将每个 Uint8Array 的数据填充到新的 Uint8Array 中\r\n\t\t\t\tlet offset = 0;\r\n\t\t\t\tmergedArray.set(binaryId, offset);\r\n\t\t\t\toffset += binaryId.length;\r\n\t\t\t\tmergedArray.set(midata, offset);\r\n\t\t\t\treturn mergedArray.buffer\r\n\t\t\t},\r\n\t\t\tsendMessage(data) {\r\n\t\t\t\tconsole.log(\"用户发送了语音\")\r\n\t\t\t\tlet _this = this\r\n\t\t\t\tthis.requestTask = wx.request({\r\n\t\t\t\t\turl: BASE_URL,\r\n\t\t\t\t\tenableChunked: true,\r\n\t\t\t\t\theader: {\r\n\t\t\t\t\t\t'content-type': 'application/json',\r\n\t\t\t\t\t\t\"app-id\": urlSetting.urls.appid,\r\n\t\t\t\t\t\t\"open-id\": uni.getStorageSync(\"openid\") ? uni.getStorageSync(\"openid\") : \"\",\r\n\t\t\t\t\t\t\"address\": encodeURIComponent(JSON.stringify(_this.location)),\r\n\t\t\t\t\t\t\"Authorization\": \"bearer \" + uni.getStorageSync(\"token\"),\r\n\t\t\t\t\t\t\"Content-Type\": \"application/octet-stream\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\tresponseType: 'arraybuffer',\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\tdata: data,\r\n\t\t\t\t\tsuccess: res => {\r\n\t\t\t\t\t\tconsole.log(\"发送成功\")\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfail: res => {\r\n\t\t\t\t\t\tconsole.error('request fail', res)\r\n\t\t\t\t\t\t// 链接出现问题\r\n\t\t\t\t\t\t_this.requestTask.offChunkReceived() //取消监听数据返回函数\r\n\t\t\t\t\t\tapp.globalData.Audio.stop()\r\n\t\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\t\tconsole.log(\"request请求失败或超时\")\r\n\t\t\t\t\t\t\t_this.playError()\r\n\t\t\t\t\t\t}, 500)\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tthis.errorTimer = setInterval(function() {\r\n\t\t\t\t\tif (_this.getResponeTime < 15) {\r\n\t\t\t\t\t\t// 10秒内是否返回第一段音频\r\n\t\t\t\t\t\tif (_this.receiveCount > 0) {\r\n\t\t\t\t\t\t\tclearInterval(_this.errorTimer)\r\n\t\t\t\t\t\t\tapp.globalData.Audio.stop()\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t_this.getResponeTime++\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t_this.getResponeTime = 0\r\n\t\t\t\t\t\tclearInterval(_this.errorTimer)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}, 1000)\r\n\t\t\t\tthis.requestTask.onChunkReceived((res) => {\r\n\t\t\t\t\t_this.receiveCount++\r\n\t\t\t\t\tif (_this.receiveCount == 1) {\r\n\t\t\t\t\t\tconsole.log(\"接收到第一条数据\")\r\n\t\t\t\t\t\t_this.transFirst(res.data)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t_this.resultArrayBuffer.push(res.data)\r\n\r\n\t\t\t\t\tconst uint8Array = new Uint8Array(res.data);\r\n\t\t\t\t\t// 判断接收到的片段是否包含 \"[DONE]\" 标记\r\n\t\t\t\t\tconst doneMarker = new Uint8Array([91, 68, 79, 78, 69, 93]);\r\n\t\t\t\t\t// const doneMarker = new Uint8Array([0x5B, 0x44, 0x4F, 0x4E, 0x45, 0x5D]); // 对应 \"[DONE]\"\r\n\t\t\t\t\tconst containsDoneMarker = _this.containsDoneMarker(uint8Array, doneMarker);\r\n\r\n\t\t\t\t\tif (containsDoneMarker) {\r\n\t\t\t\t\t\t// 处理完成\r\n\t\t\t\t\t\tconsole.log(\"检测到 [DONE] 标记\");\r\n\t\t\t\t\t\t_this.receiveEnd = true\r\n\t\t\t\t\t\t_this.requestTask.offChunkReceived() //取消监听数据返回函数\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\ttransFirst(data) {\r\n\t\t\t\tlet _this = this\r\n\t\t\t\t// 解码第一条数据\r\n\t\t\t\t_this.audioCtx.decodeAudioData(data, buffer => {\r\n\t\t\t\t\t_this.currentTransIndex++\r\n\t\t\t\t\tif (_this.currentTransIndex == 1) {\r\n\t\t\t\t\t\t_this.resetAiSpeekingEnd()\r\n\t\t\t\t\t\t_this.playFirst(buffer)\r\n\t\t\t\t\t\t_this.isWelcome = false\r\n\t\t\t\t\t\t_this.playTipsVoice()\r\n\t\t\t\t\t}\r\n\t\t\t\t\t_this.result.push(buffer)\r\n\t\t\t\t\t_this.startTrans()\r\n\r\n\t\t\t\t}, err => {\r\n\t\t\t\t\t// 音频转换失败，重新转换\r\n\t\t\t\t\t// console.log(\"当前解码失败索引：\", _this.currentTransIndex, data)\r\n\t\t\t\t\tconsole.error('decodeAudioData fail', err)\r\n\t\t\t\t\t// 将第一条从原始数据中移除\r\n\t\t\t\t\t_this.resultArrayBuffer.splice(0, 1)\r\n\t\t\t\t\t_this.startTrans()\r\n\t\t\t\t})\r\n\r\n\t\t\t},\r\n\t\t\tstartTrans() {\r\n\t\t\t\tlet _this = this\r\n\t\t\t\tif (_this.currentTransIndex < _this.arrayBufferLength) {\r\n\t\t\t\t\tlet data = _this.resultArrayBuffer[_this.currentTransIndex]\r\n\t\t\t\t\t_this.audioCtx.decodeAudioData(data, buffer => {\r\n\t\t\t\t\t\t_this.currentTransIndex++\r\n\t\t\t\t\t\tif (_this.currentTransIndex == 1) {\r\n\t\t\t\t\t\t\t_this.resetAiSpeekingEnd()\r\n\t\t\t\t\t\t\t_this.playFirst(buffer)\r\n\t\t\t\t\t\t\t_this.isWelcome = false\r\n\t\t\t\t\t\t\t_this.playTipsVoice()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t_this.result.push(buffer)\r\n\t\t\t\t\t\t_this.startTrans()\r\n\r\n\t\t\t\t\t}, err => {\r\n\t\t\t\t\t\t// 音频转换失败，重新转换\r\n\t\t\t\t\t\tconsole.error('decodeAudioData fail', err)\r\n\t\t\t\t\t\t_this.resultArrayBuffer.splice(_this.currentTransIndex, 1)\r\n\t\t\t\t\t\t// _this.currentTransIndex++\r\n\t\t\t\t\t\t_this.startTrans()\r\n\t\t\t\t\t})\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (_this.receiveEnd) {\r\n\t\t\t\t\t\t// 转换完毕\r\n\t\t\t\t\t\t// console.log(\"转换完毕：\", _this.result.length, _this.arrayBufferLength)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// 轮询是否已经转换完毕\r\n\t\t\t\t\t\t_this.transTimer = setInterval(function() {\r\n\t\t\t\t\t\t\tif (_this.currentTransIndex < _this.arrayBufferLength) {\r\n\t\t\t\t\t\t\t\t_this.startTrans()\r\n\t\t\t\t\t\t\t\tclearInterval(_this.transTimer)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, 500)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\t\t\t// 检查 Uint8Array 的最后部分是否包含 [DONE] 标记\r\n\t\t\tcontainsDoneMarker(uint8Array, doneMarker) {\r\n\t\t\t\tconst markerLength = doneMarker.length;\r\n\t\t\t\t// 检查 uint8Array 的最后部分是否与 doneMarker 匹配\r\n\t\t\t\tif (uint8Array.length < markerLength) return false; // 如果数据长度小于标记长度，直接返回 false\r\n\t\t\t\tfor (let i = 0; i < markerLength; i++) {\r\n\t\t\t\t\tif (uint8Array[uint8Array.length - markerLength + i] !== doneMarker[i]) {\r\n\t\t\t\t\t\treturn false; // 如果不匹配，返回 false\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn true; // 匹配成功\r\n\t\t\t},\r\n\t\t\tplayFirst(data) {\r\n\t\t\t\tlet _this = this\r\n\t\t\t\t_this.aiSpeeking = true\r\n\t\t\t\t_this.aiThrinking = false\r\n\t\t\t\t_this.inputStatus = false\r\n\t\t\t\t_this.hasVoice = false\r\n\t\t\t\tlet source = this.audioCtx.createBufferSource()\r\n\t\t\t\tsource.connect(this.audioCtx.destination)\r\n\t\t\t\tsource.buffer = data\r\n\t\t\t\tsource.start()\r\n\t\t\t\tsource.onended = function() {\r\n\t\t\t\t\t// console.log('片段播放结束');\r\n\t\t\t\t\t_this.currentPlayIndex++\r\n\t\t\t\t\t_this.play()\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\tplay() {\r\n\t\t\t\tlet _this = this\r\n\t\t\t\tlet len = this.result.length\r\n\t\t\t\t// console.log(_this.currentPlayIndex, len, _this.arrayBufferLength, _this.receiveEnd)\r\n\t\t\t\tif (_this.currentPlayIndex == len) {\r\n\t\t\t\t\t// 当前播放与转义后数组长度相同，再判断\r\n\t\t\t\t\tif ((len == _this.arrayBufferLength) && _this.receiveEnd) {\r\n\t\t\t\t\t\t// 语音播放完毕，判断如果是报名成功立即进入面试流程。否则数据重置，并重新开启用户语音输入\r\n\t\t\t\t\t\t// console.log(\"播放完毕\")\r\n\t\t\t\t\t\t_this.resetData()\r\n\t\t\t\t\t\t_this.setAiSpeekingEnd()\r\n\t\t\t\t\t\t_this.clearCallContent()\r\n\t\t\t\t\t\tconsole.log(\"语音对话中报名了吗：\", _this.incallEnroll)\r\n\t\t\t\t\t\tif (_this.incallEnroll) {\r\n\t\t\t\t\t\t\t// 用户报名成功，进入面试流程\r\n\t\t\t\t\t\t\t_this.action = \"audio_interview\"\r\n\t\t\t\t\t\t\t_this.status = \"interview\"\r\n\t\t\t\t\t\t\t_this.aiSpeeking = false\r\n\t\t\t\t\t\t\t_this.aiThrinking = true\r\n\t\t\t\t\t\t\t_this.handleAutoAction()\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (_this.hangUpFirst) {\r\n\t\t\t\t\t\t\t\t//主动挂断电话\r\n\t\t\t\t\t\t\t\t_this.resetHangUpFirst()\r\n\t\t\t\t\t\t\t\t_this.close()\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t_this.startRecord()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// 轮询是否有新数据返回\r\n\t\t\t\t\t\t_this.playTimer = setInterval(function() {\r\n\t\t\t\t\t\t\tif (_this.currentPlayIndex < _this.result.length) {\r\n\t\t\t\t\t\t\t\t_this.play()\r\n\t\t\t\t\t\t\t\tclearInterval(_this.playTimer)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, 500)\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\t_this.aiSpeeking = true\r\n\t\t\t\t_this.aiThrinking = false\r\n\t\t\t\t_this.inputStatus = false\r\n\t\t\t\t_this.hasVoice = false\r\n\t\t\t\tlet source = this.audioCtx.createBufferSource()\r\n\t\t\t\tsource.connect(this.audioCtx.destination)\r\n\t\t\t\tsource.buffer = this.result[this.currentPlayIndex]\r\n\t\t\t\tsource.start()\r\n\t\t\t\tsource.onended = function() {\r\n\t\t\t\t\t// console.log('片段播放结束');\r\n\t\t\t\t\t_this.currentPlayIndex++\r\n\t\t\t\t\t_this.play()\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\t.mask {\r\n\t\tbackground: rgba(0, 0, 0, .9);\r\n\r\n\t\t.top {\r\n\t\t\tposition: absolute;\r\n\t\t\ttop: 230rpx;\r\n\t\t\tleft: 50%;\r\n\t\t\ttransform: translateX(-50%);\r\n\r\n\t\t\t.avatar {\r\n\t\t\t\tfont-size: 0;\r\n\r\n\t\t\t\timage {\r\n\t\t\t\t\twidth: 400rpx;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t.gif_area {\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\ttop: 65rpx;\r\n\t\t\t\tright: -70rpx;\r\n\t\t\t\tbackground: #fff;\r\n\t\t\t\tpadding: 30rpx 30rpx;\r\n\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\tborder-radius: 40rpx;\r\n\t\t\t\tbox-shadow: 0 0 2rpx 5rpx #f1f1f1;\r\n\r\n\t\t\t\timage {\r\n\t\t\t\t\twidth: 86rpx;\r\n\t\t\t\t\tdisplay: none;\r\n\r\n\t\t\t\t\t&.show {\r\n\t\t\t\t\t\tdisplay: block;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.middle {\r\n\t\t\twidth: 100%;\r\n\t\t\tposition: absolute;\r\n\t\t\ttop: 50%;\r\n\t\t\tleft: 50%;\r\n\t\t\ttransform: translateX(-50%);\r\n\r\n\t\t\t.input_tips {\r\n\t\t\t\ttext-align: center;\r\n\t\t\t\tfont-size: 31rpx;\r\n\t\t\t\tcolor: #C5C5C5;\r\n\r\n\t\t\t\t.text_wrap {\r\n\t\t\t\t\tline-height: 50rpx;\r\n\t\t\t\t\tmargin-bottom: 60rpx;\r\n\t\t\t\t}\r\n\r\n\t\t\t\timage {\r\n\t\t\t\t\twidth: 100rpx;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.sque {\r\n\t\t\t\t\twidth: 38rpx;\r\n\t\t\t\t\theight: 38rpx;\r\n\t\t\t\t\tborder-radius: 8rpx;\r\n\t\t\t\t\tmargin: 0 auto 23rpx auto;\r\n\t\t\t\t\tbackground: #d4d4d4;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.bot {\r\n\t\t\tposition: absolute;\r\n\t\t\tbottom: 70rpx;\r\n\t\t\tleft: 50%;\r\n\t\t\ttransform: translateX(-50%);\r\n\r\n\t\t\t.btn_area {\r\n\t\t\t\tmargin-top: 150rpx;\r\n\r\n\t\t\t\timage {\r\n\t\t\t\t\twidth: 138rpx;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// image {\r\n\t\t// \twidth: 70%;\r\n\t\t// \tposition: absolute;\r\n\t\t// \ttop: 50%;\r\n\t\t// \tleft: 50%;\r\n\t\t// \ttransform: translate(-50%, -50%);\r\n\t\t// \tdisplay: none;\r\n\r\n\t\t// \t&.show {\r\n\t\t// \t\tdisplay: block;\r\n\t\t// \t}\r\n\t\t// }\r\n\t}\r\n</style>","import mod from \"-!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--8-oneOf-1-2!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-3!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/sass-loader/dist/cjs.js??ref--8-oneOf-1-4!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--8-oneOf-1-5!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./phone_call.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--8-oneOf-1-2!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-3!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/sass-loader/dist/cjs.js??ref--8-oneOf-1-4!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--8-oneOf-1-5!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./phone_call.vue?vue&type=style&index=0&lang=scss&\""],"sourceRoot":""}